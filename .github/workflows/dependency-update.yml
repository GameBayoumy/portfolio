name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  NODE_VERSION: '20.17.0'
  CI: true
  FORCE_COLOR: 1

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Check for updates
        id: updates
        run: |
          npm outdated --json > outdated.json || true
          
          if [ -s outdated.json ]; then
            echo "HAS_UPDATES=true" >> $GITHUB_OUTPUT
            echo "Updates available:"
            cat outdated.json | jq -r 'to_entries[] | "\(.key): \(.value.current) â†’ \(.value.wanted)"'
          else
            echo "HAS_UPDATES=false" >> $GITHUB_OUTPUT
            echo "No updates available"
          fi

      - name: Create update branch
        if: steps.updates.outputs.HAS_UPDATES == 'true'
        run: |
          BRANCH_NAME="deps/automated-update-$(date +%Y%m%d)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b "$BRANCH_NAME"

      - name: Update dependencies
        if: steps.updates.outputs.HAS_UPDATES == 'true'
        run: |
          # Update package.json
          npm update
          
          # Run audit fix for security issues
          npm audit fix || true

      - name: Run tests after update
        if: steps.updates.outputs.HAS_UPDATES == 'true'
        run: |
          npm ci
          npm run lint
          npm run type-check
          npm run build

      - name: Commit changes
        if: steps.updates.outputs.HAS_UPDATES == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add package.json package-lock.json
          git commit -m "chore: automated dependency updates
          
          ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"

      - name: Push changes
        if: steps.updates.outputs.HAS_UPDATES == 'true'
        run: git push origin "$BRANCH_NAME"

      - name: Create Pull Request
        if: steps.updates.outputs.HAS_UPDATES == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const fs = require('fs');
            const outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));
            
            let body = '## ðŸ¤– Automated Dependency Updates\n\n';
            body += 'This PR contains automated dependency updates.\n\n';
            body += '### Updated Packages:\n\n';
            
            for (const [pkg, info] of Object.entries(outdated)) {
              body += `- **${pkg}**: \`${info.current}\` â†’ \`${info.wanted}\`\n`;
            }
            
            body += '\n### Automated Checks:\n\n';
            body += '- âœ… Linting passed\n';
            body += '- âœ… Type checking passed\n';
            body += '- âœ… Build completed successfully\n\n';
            body += '### Manual Review Required:\n\n';
            body += '- [ ] Review breaking changes\n';
            body += '- [ ] Test functionality\n';
            body += '- [ ] Verify deployment\n\n';
            body += 'ðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\n';
            body += 'Co-Authored-By: Claude <noreply@anthropic.com>';
            
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `chore: automated dependency updates (${new Date().toISOString().split('T')[0]})`,
              head: process.env.BRANCH_NAME,
              base: 'main',
              body: body
            });