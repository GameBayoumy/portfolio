name: Cache Cleanup

on:
  schedule:
    # Run cache cleanup weekly on Saturdays at 1 AM UTC
    - cron: '0 1 * * 6'
  workflow_dispatch:

permissions:
  actions: write
  contents: read

jobs:
  cleanup-caches:
    name: Cleanup Old Caches
    runs-on: ubuntu-latest
    
    steps:
      - name: Cleanup old caches
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const { data: caches } = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });
            
            // Keep only the most recent caches and delete old ones
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - 7); // Keep caches from last 7 days
            
            let deletedCount = 0;
            for (const cache of caches.actions_caches) {
              const cacheDate = new Date(cache.created_at);
              if (cacheDate < cutoffDate) {
                try {
                  await github.rest.actions.deleteActionsCacheById({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    cache_id: cache.id,
                  });
                  console.log(`Deleted cache: ${cache.key} (${cache.size_in_bytes} bytes)`);
                  deletedCount++;
                } catch (error) {
                  console.error(`Failed to delete cache ${cache.key}:`, error);
                }
              }
            }
            
            console.log(`Cleanup completed. Deleted ${deletedCount} old caches.`);
            
            // Create summary
            const summary = `## ðŸ§¹ Cache Cleanup Summary\n\n**Deleted caches**: ${deletedCount}\n**Cleanup date**: ${new Date().toISOString()}\n**Retention period**: 7 days`;
            console.log(summary);