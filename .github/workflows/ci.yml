name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.17.0'
  NEXT_TELEMETRY_DISABLED: 1
  CI: true
  FORCE_COLOR: 1

permissions:
  contents: read
  security-events: write
  statuses: write
  checks: write
  pull-requests: write

jobs:
  # Job 1: Code Quality & Testing
  quality-check:
    name: Code Quality & Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          check-latest: true

      - name: Cache Dependencies
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        id: npm-cache
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit --frozen-lockfile
        timeout-minutes: 10
        continue-on-error: false

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Check code formatting
        run: npx prettier --check "**/*.{js,jsx,ts,tsx,json,css,md}"

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: build-artifacts-${{ github.run_id }}
          path: |
            .next/
            !.next/cache/
          retention-days: 1
          compression-level: 6
          if-no-files-found: error

  # Job 2: Security Scanning
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          check-latest: true

      - name: Restore Dependencies Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --frozen-lockfile
        timeout-minutes: 10

      - name: Run security audit
        run: |
          npm audit --audit-level=high --json > security-audit.json || true
          if [ $(cat security-audit.json | jq '.vulnerabilities | length') -gt 0 ]; then
            echo "Security vulnerabilities found:"
            npm audit --audit-level=high
            exit 1
          fi
        continue-on-error: false

      - name: CodeQL Analysis - Initialize
        uses: github/codeql-action/init@e2b3eafc8d227b0241d48be5f425d47c2d750a13 # v3.26.10
        with:
          languages: javascript
          queries: security-extended,security-and-quality

      - name: CodeQL Analysis - Perform
        uses: github/codeql-action/analyze@e2b3eafc8d227b0241d48be5f425d47c2d750a13 # v3.26.10
        with:
          category: "/language:javascript"

  # Job 3: Performance Analysis
  performance-analysis:
    name: Performance Analysis
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-artifacts-${{ github.run_id }}
          path: .next/

      - name: Bundle analysis
        run: npm run analyze
        env:
          ANALYZE: true

      - name: Upload bundle analysis
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: bundle-analysis-${{ github.run_id }}
          path: |
            .next/analyze/
          retention-days: 7
          compression-level: 6

  # Job 4: Accessibility Testing
  accessibility-test:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Install Pa11y
        run: npm install -g pa11y

      - name: Build and start application
        run: |
          npm run build
          npm start &
          sleep 10

      - name: Run accessibility tests
        run: pa11y http://localhost:3000 --reporter json > accessibility-report.json || true

      - name: Upload accessibility report
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: accessibility-report-${{ github.run_id }}
          path: accessibility-report.json
          retention-days: 7
          if-no-files-found: warn

  # Job 5: Status Check
  ci-status:
    name: CI Status Check
    runs-on: ubuntu-latest
    needs: [quality-check, security-scan]
    if: always()
    
    steps:
      - name: Check CI status
        run: |
          if [[ "${{ needs.quality-check.result }}" == "success" && "${{ needs.security-scan.result }}" == "success" ]]; then
            echo "✅ CI Pipeline completed successfully"
            exit 0
          else
            echo "❌ CI Pipeline failed"
            echo "Quality Check: ${{ needs.quality-check.result }}"
            echo "Security Scan: ${{ needs.security-scan.result }}"
            exit 1
          fi

      - name: Update commit status
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: commits } = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              per_page: 1
            });
            
            const state = '${{ needs.quality-check.result }}' === 'success' && '${{ needs.security-scan.result }}' === 'success' ? 'success' : 'failure';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: state,
              description: `CI Pipeline ${state}`,
              context: 'ci/quality-check'
            });