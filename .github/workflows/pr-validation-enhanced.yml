name: 🔍 Enhanced PR Validation
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20.17.0"
  NEXT_TELEMETRY_DISABLED: 1
  CI: true

jobs:
  # Quick validation for fast feedback
  quick-validation:
    name: ⚡ Quick Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    timeout-minutes: 10
    outputs:
      changes: ${{ steps.changes.outputs.changes }}
      skip-tests: ${{ steps.changes.outputs.skip-tests }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Detect changes
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            src:
              - 'src/**'
              - 'app/**'
              - 'components/**'
              - 'lib/**'
            tests:
              - '__tests__/**'
              - 'tests/**'
              - '**/*.test.*'
              - '**/*.spec.*'
            config:
              - 'package.json'
              - 'bun.lockb'
              - 'tsconfig.json'
              - 'next.config.js'
              - '.eslintrc.*'
            docs:
              - '**.md'
              - 'docs/**'
            skip-tests: |
              - 'docs/**'
              - '**.md'
              - '.github/**'
              - 'scripts/**'

      - name: 🏗️ Setup Node.js/Bun
        if: steps.changes.outputs.src == 'true' || steps.changes.outputs.config == 'true'
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          use-bun: 'true'
          install-dependencies: 'true'

      - name: 🔍 Lint check
        if: steps.changes.outputs.src == 'true'
        run: bun run lint

      - name: 🎯 Type check
        if: steps.changes.outputs.src == 'true'
        run: bun run type-check

      - name: 🏗️ Build check
        if: steps.changes.outputs.src == 'true'
        run: bun run build

  # Comprehensive testing
  test-suite:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    needs: quick-validation
    if: needs.quick-validation.outputs.skip-tests != 'true'
    timeout-minutes: 20
    strategy:
      matrix:
        test-type: [unit, integration]
        include:
          - test-type: unit
            command: "test"
            coverage: true
          - test-type: integration
            command: "test:integration"
            coverage: false

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js/Bun
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          use-bun: 'true'
          install-dependencies: 'true'

      - name: 🧪 Run ${{ matrix.test-type }} tests
        run: bun run ${{ matrix.command }}
        env:
          CI: true

      - name: 📊 Upload coverage
        if: matrix.coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: ${{ matrix.test-type }}
          name: ${{ matrix.test-type }}-coverage

  # Performance regression testing
  performance-test:
    name: ⚡ Performance Test
    runs-on: ubuntu-latest
    needs: [quick-validation, test-suite]
    if: needs.quick-validation.outputs.changes == 'src'
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js/Bun
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          use-bun: 'true'
          install-dependencies: 'true'

      - name: 🏗️ Build application
        run: bun run build

      - name: 🚀 Start application
        run: |
          bun run start &
          sleep 10
        env:
          PORT: 3000

      - name: ⚡ Run Lighthouse audit
        run: |
          npx lighthouse http://localhost:3000 \
            --chrome-flags="--headless --no-sandbox" \
            --output json \
            --output-path lighthouse-results.json

      - name: 📊 Performance results
        run: |
          PERFORMANCE_SCORE=$(cat lighthouse-results.json | jq '.categories.performance.score * 100')
          echo "Performance Score: $PERFORMANCE_SCORE"
          
          if (( $(echo "$PERFORMANCE_SCORE < 80" | bc -l) )); then
            echo "❌ Performance regression detected: $PERFORMANCE_SCORE < 80"
            exit 1
          fi

  # Final status check
  pr-status:
    name: ✅ PR Status Check
    runs-on: ubuntu-latest
    needs: [quick-validation, test-suite, performance-test]
    if: always()
    timeout-minutes: 5

    steps:
      - name: 📊 Check all jobs status
        uses: actions/github-script@v7
        with:
          script: |
            const jobs = [
              { name: 'Quick Validation', status: '${{ needs.quick-validation.result }}' },
              { name: 'Test Suite', status: '${{ needs.test-suite.result }}' },
              { name: 'Performance Test', status: '${{ needs.performance-test.result }}' }
            ];
            
            const failed = jobs.filter(job => job.status === 'failure');
            const skipped = jobs.filter(job => job.status === 'skipped');
            const passed = jobs.filter(job => job.status === 'success');
            
            let summary = '## 📊 Enhanced PR Validation Summary\n\n';
            summary += `✅ **Passed**: ${passed.length}\n`;
            summary += `⏭️ **Skipped**: ${skipped.length}\n`;
            summary += `❌ **Failed**: ${failed.length}\n\n`;
            
            if (failed.length > 0) {
              summary += '### ❌ Failed Checks\n';
              failed.forEach(job => summary += `- ${job.name}\n`);
              summary += '\n';
            }
            
            if (passed.length > 0) {
              summary += '### ✅ Passed Checks\n';
              passed.forEach(job => summary += `- ${job.name}\n`);
            }
            
            console.log(summary);
            
            const canMerge = failed.length === 0;
            core.setOutput('can-merge', canMerge);

      - name: 💬 Comment PR status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `📊 **Enhanced PR Validation Complete**
            
            All validation checks have been completed with improved performance and security scanning.
            
            **Next steps:**
            - Review results above
            - Address any failed checks
            - Ready for review when all checks pass`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });